name: Deployment
on:
  push:
    branches:
      - development
jobs:
  get_diff:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get context
        run:  echo running on branch ${GITHUB_REF##*/}
      - name: Extract Sprint Branch name
        run: |
          # Get the commit hash of the latest merge commit on development
          MERGE_COMMIT_HASH=$(git log -n 1 --merges --pretty=format:'%H' development)
          
          # Get the names of branches that were merged into development
          FEATURE_BRANCHES=$(git branch --contains $MERGE_COMMIT_HASH | grep -v 'development' | sed 's/\* //')
          
          # Extract only the first branch name (assuming one feature branch was merged)
          FEATURE_BRANCH=$(echo $FEATURE_BRANCHES | awk '{print $1}')
          echo "Feature branch name: $FEATURE_BRANCH"
      - name: list-files
        run: ls
      - name: Find changed files
        run: |
          git fetch origin main
          CHANGED_FILES=$(git diff --name-only origin/main)
          echo "Changed files: $CHANGED_FILES"
          mkdir package
          UPLOAD_FOLDER="package"
          while IFS= read -r file; do
            dir=$(dirname "$file")
            mkdir -p "$UPLOAD_FOLDER/$dir"
            cp "$file" "$UPLOAD_FOLDER/$dir/"
            echo "Copied $file to $UPLOAD_FOLDER/$dir/"
          done <<< "$CHANGED_FILES"
          cd package
          ls
      - name: Create new branch
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git checkout --orphan nexus
          git rm -rf .
          echo ".github/
          .gitignore" > .gitignore
          git add .
          git commit -m"GitHub action commit"
          git push origin nexus
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Debug Info
        run: |
          echo "Changed files: $CHANGED_FILES"
          echo "Branch Name: $GITHUB_REF"